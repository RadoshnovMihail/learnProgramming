// Рассмотрим массив, содержащий кошек и собак. Каждая собака может поймать только одну кошку, но не может поймать кошку, находящуюся на расстоянии более n элементов. Ваша задача - вернуть максимальное количество кошек, которых можно поймать.

// solve(['D','C','C','D','C'], 2) = 2, потому что собака с индексом 0 (D0) ловит C1, а D3 ловит C4. 
// solve(['C','C','D','D','C','D'], 2) = 3, потому что D2 ловит C0, D3 ловит C1 и D5 ловит C4. solve(['C','C','D','D','C','D'], 1) = 2, потому что D2 ловит C1, D3 ловит C4. C0 не может быть пойман, потому что n == 1. solve(['D','C','D','D','C'], 1) = 2, слишком много собак, поэтому все кошки пойманы!


function solve(arr,n){
    let count = 0;
    let animals = [...arr];
    for(let i = 0; i < animals.length; i++){
        if(animals[i]  === 'C'){
            
        }
    }
   }

   console.log(solve(['D','C','C','D','C'], 2)) // 2



   console.log(solve(['C','C','D','D','C','D'], 2)) // 2
   console.log(solve(['C','C','D','D','C','D'], 1)) // 2