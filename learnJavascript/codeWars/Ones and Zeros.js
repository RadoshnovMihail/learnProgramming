// Задав массив единиц и нулей, преобразуйте эквивалентное двоичное значение в целое число.

// Например: [0, 0, 0, 1] преобразуется в 0001, что является двоичным представлением 1.

// Примеры:

// Проверка: [0, 0, 0, 1] ==> 1
// Тестирование: [0, 0, 1, 0] ==> 2
// Тестирование: [0, 1, 0, 1] ==> 5
// Тестирование: [1, 0, 0, 1] ==> 9
// Тестирование: [0, 0, 1, 0] ==> 2
// Тестирование: [0, 1, 1, 0] ==> 6
// Тестирование: [1, 1, 1, 1] ==> 15
// Тестирование: [1, 0, 1, 1] ==> 11
// Однако массивы могут иметь различную длину, не ограничиваясь только 4.

  
  // Проверка: [0, 0, 0, 1] ==> 1
  console.log(binaryArrayToNumber([0, 0, 0, 1]));
  
  // Тестирование: [0, 0, 1, 0] ==> 2
  console.log(binaryArrayToNumber([0, 0, 1, 0]));
  
  // Тестирование: [0, 1, 0, 1] ==> 5
  console.log(binaryArrayToNumber([0, 1, 0, 1]));
  
  // Тестирование: [1, 0, 0, 1] ==> 9
  console.log(binaryArrayToNumber([1, 0, 0, 1]));
  
  // Тестирование: [0, 1, 1, 0] ==> 6
  console.log(binaryArrayToNumber([0, 1, 1, 0]));
  
  // Тестирование: [1, 1, 1, 1] ==> 15
  console.log(binaryArrayToNumber([1, 1, 1, 1]));
  
  // Тестирование: [1, 0, 1, 1] ==> 11
  console.log(binaryArrayToNumber([1, 0, 1, 1]));
  
  // Массивы могут иметь различную длину
  // Пример: [1, 0, 1, 1, 0] ==> 22
  console.log(binaryArrayToNumber([1, 0, 1, 1, 0]));